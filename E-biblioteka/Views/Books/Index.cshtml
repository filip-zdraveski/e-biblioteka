@using PagedList;
@using PagedList.Mvc;
@model E_biblioteka.Models.BooksViewModel

@{
    ViewBag.Title = "Index";

}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .checked {
        color: orange;
    }

    .card {
        margin-bottom: 25px;
    }
</style>

<div class="container-fluid">
    <div class="row text-center">
        <h2>Books</h2>
    </div>
    <div class="row" style="margin-bottom: 50px;">
        <span style="margin-left: 100px;">
            @if (User.IsInRole("Administrator"))
            {
                <a href="@Url.Action("Create", "Books")" class="btn btn-primary">+ Add a book</a>
            }
        </span>
        <div class="col-xs-12 col-sm-4 col-lg-6 pull-right">
            <div class="form-inline" style="margin-left: 80px;">
                @using (Html.BeginForm("Index", "Books", FormMethod.Get))
                {
                    <div class="form-group" style="width: 100%;">
                        <label for="search"><i class="fa fa-search"></i></label>
                        @Html.TextBox("search", "", new { @class = "form-control", @style = "width: 400px; max-width: 400px;", @placeholder = "Enter book / author name" })
                    </div>
                }
                    <div class="form-group" style="margin-top: 15px; margin-left: 5px;">
                        <label for="order-list"><i class="fa fa-sort"></i></label>
                        <select id="order-list" class="form-control" style="width: 185px; margin-right: 15px;">
                            <option value="">--Order By--</option>
                            <option value="title-ascending">Title (A-Z)</option>
                            <option value="title-descending">Title (Z-A)</option>
                            <option value="rating-descending">Top Rated</option>
                            <option value="year-descending">Publish Date (newest)</option>
                            <option value="year-ascending">Publish Date (oldest)</option>
                        </select>
                        <label for="genres-list"><i class="fa fa-sort"></i></label>
                        <select id="genres-list" class="form-control" style="width: 185px;">
                            <option value="">--All Genres--</option>
                            @foreach (var genre in Model.Genres)
                            {
                                <option value="@genre">@genre</option>
                            }
                        </select>
                    </div>
            </div>
        </div>
    </div>
    <div class="container-fluid text-center">
        @foreach (var item in Model.Books)
        {
            <div class="card bg-light col-lg-4 mb-2">
                <img class="card-img-top" src="@item.ImageUrl" style="width: 200px; height: 280px; cursor: pointer;" onclick="window.location='/Books/Details/@item.BookId'" />
                <div class="card-body">
                    <h5 class="card-title">@Html.ActionLink(item.Name, "Details", "Books", new { id = item.BookId }, new { })</h5>
                    <p>
                        by @Html.ActionLink(item.Author.Name, "Details", "Authors", new { id = item.Author.AuthorId }, new { })
                    </p>
                    <p>
                        @for (var i = 1; i <= Math.Floor(item.Rating); i++)
                        {
                            <span class="fa fa-star checked"></span>
                        }

                        @for (var i = 1; i <= 5 - Math.Floor(item.Rating); i++)
                        {
                            <span class="fa fa-star"></span>
                        }
                    </p>
                    <p>
                        @if (User.IsInRole("Member") || User.IsInRole("Moderator"))
                        {
                            if (item.InStock > 0)
                            {
                                <button type="button" class="btn btn-default" onclick="window.location='Books/Order/@item.BookId'">
                                    <span class="glyphicon glyphicon-shopping-cart"> Order</span>
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-default disabled">
                                    <span class="glyphicon glyphicon-shopping-cart"> Order</span>
                                </button>
                            }
                        }
                        @if (User.IsInRole("Administrator") || User.IsInRole("Employee"))
                        {
                            <a href="@Url.Action("Edit", "Books", new { id = item.BookId })" class="btn btn-info">Edit</a>
                        }
                        @if (User.IsInRole("Administrator"))
                        {
                            <a href="@Url.Action("Delete", "Books", new { id = item.BookId })" class="btn btn-danger">Delete</a>
                        }
                    </p>


                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="pagination text-center col-sm-12 col-xs-12 col-md-12 col-lg-12">
            @Html.PagedListPager(Model.Books, page => Url.Action("Index", new { page = page, orderBy = ViewBag.OrderBy }))
        </div>
    </div>
</div>
<div>
    @if (User.IsInRole("Member") || User.IsInRole("Moderator") || User.IsInRole("Employee"))
    {
        <p>Send us a request for a book that you like which is not on our list and we'll try to make it available for you</p>
        @Html.ActionLink("Send Request", "Create", "Requests")
    }
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            $("select option").each(function () {
                var value = $(this).attr("value");
                if (document.location.search.includes(value)) {
                    $(this).attr("selected", true);
                    return;
                }
            });


            $("#order-list").on("change",
                function () {
                    document.location = "?orderBy=" + this.value + "&search=" + $("#search").attr("value") + "&bookGenre=" + $("#genres-list").val();
                });

            $("#genres-list").on("change",
                function () {
                    document.location = "?orderBy=" + $("#order-list").val() + "&search=" + $("#search").attr("value") + "&bookGenre=" + this.value;
                });
        });
    </script>
}
